@model FileUploadViewModel
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@if (User.IsInRole("Shipping Employee"))
{
    <h4>Upload Edited Addendum Reports Here</h4>
    <hr />

    @if (ViewBag.Message != null)
    {
        <div class="alert alert-success alert-dismissible" style="margin-top:20px">
            @ViewBag.Message
        </div>
    }

    <form method="post" enctype="multipart/form-data">
        <input type="file" name="files" multiple required />
        <input type="text" autocomplete="off" placeholder="Enter File Description" name="description" required />
        <button type="submit" class="btn btn-primary" asp-controller="File" asp-action="UploadToFileSystem">Upload to File System</button>
        <button class="btn btn-success" type="submit" asp-controller="File" asp-action="UploadToDatabase">Upload to Database</button>
    </form>
    <hr />
    <h4>Edited Files on File System</h4>
    @if (Model.UploadOnSystems.Count == 0)
    {
        <caption>No Records Found</caption>
    }
    else
    {
        <caption>List of Edited Excel Files on File System. Head to the Upload page to add new .txt files.</caption>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>File Type</th>
                    <th>Created On</th>
                    <th>Uploaded By</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var file in Model.UploadOnSystems)
                {
                <tr>
                    <th>@file.Id</th>
                    <td>@file.Name</td>
                    <td>@file.Description</td>
                    <td>@file.FileType</td>
                    <td>@file.CreatedOn</td>
                    <td>@file.UploadedBy</td>

                    <td>
                        <a type="button" class="btn btn-primary" asp-controller="File" asp-action="DownloadFileFromFileSystem" asp-route-id="@file.Id">Download</a>
                        <a type="button" class="btn btn-danger" asp-controller="File" asp-action="DeleteFileFromFileSystem" asp-route-id="@file.Id">Delete</a>
                    </td>
                </tr>
                }
            </tbody>
        </table>
    }
    } 
@if (User.IsInRole("FreshGold Employee"))
{
    <h4>Files on File System</h4>
    @if (Model.UploadOnSystems.Count == 0)
    {
        <caption>No Records Found</caption>
    }
    else
    {
        <caption>List of Files on File System</caption>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>File Type</th>
                    <th>Created On</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var file in Model.UploadOnSystems)
                {
                    <tr>
                        <th>@file.Id</th>
                        <td>@file.Name</td>
                        <td>@file.Description</td>
                        <td>@file.FileType</td>
                        <td>@file.CreatedOn</td>
                        <td>
                            <a type="button" class="btn btn-primary" asp-controller="File" asp-action="DownloadFileFromFileSystem" asp-route-id="@file.Id">Download</a>
                            <a type="button" class="btn btn-danger" asp-controller="File" asp-action="DeleteFileFromFileSystem" asp-route-id="@file.Id">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
}

